{"version":3,"file":"main.c2312f9c8fa1b3da786f.bundle.js","sources":["webpack:///./src/components/Token/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-oui-icons';\nimport DismissButton from './DismissButton';\nimport classNames from 'classnames';\n\nconst LIGHT_BACKGROUND_STYLES = [\n  'tertiary',\n];\n\n// Light backgrounds require a dark font and dismiss Icon color.\nconst getStylingInfo = style => LIGHT_BACKGROUND_STYLES.includes(style) ?\n  { fontClass: 'oui-token--font-dark', fillColor: 'black' } :\n  { fontClass: 'oui-token--font-light', fillColor: 'white' };\n\n/**\n * Token to be used to make token lists.\n * @param {Object} props - Properties passed to component\n * @returns {ReactElement}\n */\nconst Token = ({\n  description,\n  hasSnugWrap,\n  hasWrap,\n  isDismissible,\n  isDraggable,\n  name,\n  onDismiss,\n  order,\n  style,\n  showWell,\n  testSection,\n}) => {\n  const classes = classNames({\n    'oui-token-wrap': hasWrap && !hasSnugWrap,\n    'oui-token-wrap--snug': hasSnugWrap,\n    'oui-token-wrap--well': showWell,\n    'flex': true,\n  });\n  const tokenToolsClasses = classNames({\n    'oui-token-tool': isDraggable || order,\n    'cursor--move': isDraggable,\n  });\n  const { fontClass, fillColor } = getStylingInfo(style);\n\n  return (\n    /* eslint-disable react/jsx-boolean-value */\n    <div\n      data-oui-component={ true }\n      className={ classes }\n      data-test-section={ testSection }>\n      <div\n        className={ tokenToolsClasses }\n        data-token-handle>\n        { order &&\n          <span className=\"oui-token__number\">\n            { order }\n          </span>\n        }\n        { isDraggable &&\n          <div className=\"oui-icon oui-token__move\">\n            <Icon name=\"ellipsis\" fill=\"#c7c7c7\" />\n          </div>\n        }\n      </div>\n      <div className={ `oui-token oui-token--${style}` }>\n        <div className={ fontClass }>\n          { name }\n          { description &&\n            <div className=\"oui-token__description\">\n              { description }\n            </div>\n          }\n        </div>\n        { (isDismissible && onDismiss) &&\n          <DismissButton\n            onClick={ onDismiss }\n            fill={ fillColor }\n            testSection={ testSection }\n          />\n        }\n      </div>\n    </div>\n    /* eslint-enable */\n  );\n};\n\nToken.propTypes = {\n  /** Description explaining the token */\n  description: PropTypes.string,\n\n  /** Whether or not the token should have a tighter wrap */\n  hasSnugWrap: PropTypes.bool,\n\n  /** Whether or not the token should have a wrap */\n  hasWrap: PropTypes.bool,\n\n  /**\n   * Determines if token has dismissible feature or not. If true, `onDismiss`\n   * is required.\n   */\n  isDismissible: PropTypes.bool,\n\n  /** Shows an icon indicating that the token is draggable */\n  isDraggable: PropTypes.bool,\n\n  /** Name label on token */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Function to call that dismisses the token. Required if the token is\n   * dismissible.\n   */\n  onDismiss: PropTypes.func,\n\n  /** Show a number indicating the token's order */\n  order: PropTypes.number,\n\n  /** Whether or not a well is presented around the token. */\n  showWell: PropTypes.bool,\n\n  /** Determines style of token depending on priority level or error */\n  style: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'error']),\n\n  /** Hook for automated JavaScript tests */\n  testSection: PropTypes.string,\n};\n\nToken.defaultProps = {\n  hasWrap: true,\n  isDismissible: false,\n  style: 'secondary',\n  showWell: true,\n};\n\nexport default Token;\n"],"mappings":"AAAA","sourceRoot":""}